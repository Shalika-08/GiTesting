<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PdfSharp.Quality</name>
    </assembly>
    <members>
        <member name="T:PdfSharp.Quality.AssetsHelper">
            <summary>
            Static helper functions for fonts.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.AssetsHelper.GetAssetsFolder(System.String)">
            <summary>
            Gets the assets folder or null, if no such folder exists.
            </summary>
            <param name="path">The path or null, if the function should use the current folder.</param>
        </member>
        <member name="M:PdfSharp.Quality.AssetsHelper.EnsureAssets(System.String)">
            <summary>
            Checks whether the assets folder exists and throws an exception if not.
            </summary>
            <param name="path">The path or null, if the function should use the current folder.</param>
        </member>
        <member name="T:PdfSharp.Quality.DefaultFontResolver_unused">
            <summary>
            
            </summary>
            <seealso cref="T:PdfSharp.Fonts.IFontResolver" />
        </member>
        <member name="M:PdfSharp.Quality.DefaultFontResolver_unused.ResolveTypeface(System.String,System.Boolean,System.Boolean)">
            <summary>
            Converts specified information about a required typeface into a specific font.
            </summary>
            <param name="familyName">Name of the font family.</param>
            <param name="isBold">Set to <c>true</c> when a bold fontface is required.</param>
            <param name="isItalic">Set to <c>true</c> when an italic fontface is required.</param>
            <returns>
            Information about the physical font, or null if the request cannot be satisfied.
            </returns>
        </member>
        <member name="M:PdfSharp.Quality.DefaultFontResolver_unused.GetFont(System.String)">
            <summary>
            Gets the bytes of a physical font with specified face name.
            </summary>
            <param name="faceName">A face name previously retrieved by ResolveTypeface.</param>
        </member>
        <member name="T:PdfSharp.Quality.Feature">
            <summary>
            Base class for features.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Feature.RenderSnippetAsPdf(PdfSharp.Quality.Snippet)">
            <summary>
            Renders a code snippet to PDF.
            </summary>
            <param name="snippet">A code snippet.</param>
        </member>
        <member name="M:PdfSharp.Quality.Feature.CreateNewPdfDocument">
            <summary>
            Creates a PDF test document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Feature.SaveToStreamOrSaveToFile(PdfSharp.Pdf.PdfDocument,System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Saves a PDF document to stream or save to file.
            </summary>
            <param name="document">The document.</param>
            <param name="stream">The stream.</param>
            <param name="filenameTag">The filename tag.</param>
            <param name="show">if set to <c>true</c> [show].</param>
        </member>
        <member name="M:PdfSharp.Quality.Feature.SaveAndShowDocument(PdfSharp.Pdf.PdfDocument,System.String)">
            <summary>
            Saves a PDF document and show it document.
            </summary>
            <param name="document">The document.</param>
            <param name="filenameTag">The filename tag.</param>
        </member>
        <member name="M:PdfSharp.Quality.Feature.SaveDocument(PdfSharp.Pdf.PdfDocument,System.String)">
            <summary>
            Saves a PDF document into a file.
            </summary>
            <param name="document">The PDF document.</param>
            <param name="filenameTag">The tag of the PDF file.</param>
        </member>
        <member name="M:PdfSharp.Quality.Feature.ReadWritePdfDocument(System.String,PdfSharp.Pdf.IO.PdfPasswordProvider)">
            <summary>
            Reads and writes a PDF document.
            </summary>
            <param name="filename">The PDF file to read.</param>
            <param name="passwordProvider">The password provider if the file is protected.</param>
        </member>
        <member name="T:PdfSharp.Quality.FeatureAndSnippetBase">
            <summary>
            Base class with common code for both features and snippets.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Quality.FeatureAndSnippetBase"/> class.
            </summary>
        </member>
        <member name="T:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions">
            <summary>
            Specifies how to draw a fox on the a PDF page.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions.None">
            <summary>
            Draw no box.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions.Box">
            <summary>
            Draw a box.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions.DrawX">
            <summary>
            Draw 
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions.Fill">
            <summary>
            Draw 
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions.Tile">
            <summary>
            Draw 
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.WidthInPoint">
            <summary>
            The width of the PDF page in point.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.HeightInPoint">
            <summary>
            The height of the PDF page in point.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.WidthInMillimeter">
            <summary>
            The width of the PDF page in millimeter.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.HeightInMillimeter">
            <summary>
            The height of the PDF page in millimeter.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.WidthInPU">
            <summary>
            The width of the PDF page in presentation units.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.HeightInPU">
            <summary>
            The width of the PDF page in presentation units.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxWidth">
            <summary>
            The width of the drawing box in presentation units.
            </summary>
        </member>
        <member name="F:PdfSharp.Quality.FeatureAndSnippetBase.BoxHeight">
            <summary>
            The height of the drawing box in presentation units.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.BoxCenter">
            <summary>
            The center of the box.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.Gray">
            <summary>
            Gets the gray background brush for boxes.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.PdfSharpTechnology">
            <summary>
            Gets a tag that specifies the PDFsharp build technology.
            It is either 'core', 'gdi', or 'wpf'.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.BeginPdfDocument">
            <summary>
            Creates a new PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.EndPdfDocument">
            <summary>
            Ends access to the current PDF document and renders it to a memory stream.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.BeginPdfPage">
            <summary>
            Creates a new page in the current PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.EndPdfPage">
            <summary>
            Ends the current PDF page.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.GenerateParallelComparisonDocument">
            <summary>
            Generates a PDF document for parallel comparison of two render results.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.GenerateSerialComparisonDocument">
            <summary>
            Generates the serial comparison document. DOCTODO
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.SaveAndShowFile(System.Byte[],System.String,System.Boolean)">
            <summary>
            Saves the and show file.
            </summary>
            <param name="sourceBytes">The source bytes.</param>
            <param name="filepath">The filepath.</param>
            <param name="startViewer">if set to <c>true</c> [start viewer].</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">sourceBytes</exception>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.SaveAndShowPdfDocument(System.String,System.Boolean)">
            <summary>
            Saves and optionally shows a PDF document.
            </summary>
            <param name="filepath">The filepath.</param>
            <param name="startViewer">if set to <c>true</c> [start viewer].</param>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.SaveAndShowPngImage(System.String,System.Boolean)">
            <summary>
            Saves and optionally shows a PNG image.
            </summary>
            <param name="filepath">The filepath.</param>
            <param name="startViewer">if set to <c>true</c> [start viewer].</param>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.SaveAndShowComparisonDocument(System.String,System.Boolean)">
            <summary>
            Saves and shows a parallel comparison PDF document.
            </summary>
            <param name="filepath">The filepath.</param>
            <param name="startViewer">if set to <c>true</c> [start viewer].</param>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.SaveStreamToFile(System.IO.Stream,System.String)">
            <summary>
            Saves a stream to a file.
            </summary>
            <param name="stream">The stream.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.BeginImage">
            <summary>
            Prepares new bitmap image for drawing.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FeatureAndSnippetBase.EndPngImage">
            <summary>
            Ends the current GDI+ image.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.Document">
            <summary>
            Gets the current PDF document.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.Page">
            <summary>
            Gets the current PDF page.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.XGraphics">
            <summary>
            Gets the current PDFsharp graphics object.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.PdfBytes">
            <summary>
            Gets the bytes of a PDF document.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.PngBytes">
            <summary>
            Gets the bytes of a PNG image.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.FeatureAndSnippetBase.ComparisonBytes">
            <summary>
            Gets the bytes of a comparision document.
            </summary>
        </member>
        <member name="T:PdfSharp.Quality.FontHelper">
            <summary>
            Static helper functions for fonts.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FontHelper.LoadFontData(System.String)">
            <summary>
            Returns the specified font from an embedded resource.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.FontHelper.LoadFontData(System.String,System.Reflection.Assembly)">
            <summary>
            Returns the specified font from an embedded resource.
            </summary>
        </member>
        <member name="T:PdfSharp.Quality.IOHelper">
            <summary>
            Static helper functions for IO.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.IOHelper.CreateNewPdfDocument">
            <summary>
            Creates a PDF test document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.IOHelper.CreateTemporaryPdfFileName(System.String)">
            <summary>
            Creates the name of a temporary PDF file.
            The name ends with '_tempfile.pdf' to make it easy to delete it using the pattern '*_tempile.pdf'.
            </summary>
        </member>
        <member name="T:PdfSharp.Quality.PathHelper">
            <summary>
            Helper class for file paths.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.PathHelper.FindPath(System.String,System.String)">
            <summary>
            Builds a path by the following strategy. Get the current directory and find the specified folderName in it.
            Then replace the path right of folderName with the specified subPath.
            </summary>
            <param name="folderName">Name of a parent folder in the path to the current directory.</param>
            <param name="subPath">The sub path that substitutes the part right of folderName in the current directory path.</param>
            <returns>The new path.</returns>
        </member>
        <member name="T:PdfSharp.Quality.PdfFileFormatter">
            <summary>
            Reads a PDF document, unpacks all its streams, and save it under a new name.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.PdfFileFormatter.FormatDocument(System.String)">
            <summary>
            Reads a PDF file, formats the content and saves the new document.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="T:PdfSharp.Quality.Snippet">
            <summary>
            Base class of code snippets for testing.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PdfSharp.Quality.Snippet"/> class.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.Title">
            <summary>
            Gets or sets the title of the snipped
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.BoxOption">
            <summary>
            Gets or sets the box option.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.Cleanroom">
            <summary>
            Gets or sets a value indicating how this <see cref="T:PdfSharp.Quality.Snippet"/> is drawn.
            If it is true, all describing graphics like title and boxes are omitted.
            Use this option to produce a clean PDF for debugging purposes.
            If it is false, all describing graphics like title and boxes are drawn.
            This is the regular case.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.NoGraphic">
            <summary>
            Gets or sets a value indicating whether all graphics output is omitted.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.NoText">
            <summary>
            Gets or sets a value indicating whether all text output is omitted.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.FontNameStd">
            <summary>
            The standard font name used in snippet.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.FontStd">
            <summary>
            Gets the standard font in snippets.
            </summary>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.FontHeader">
            <summary>
            Gets the header font in snippets.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawNotSupportedFeature(PdfSharp.Drawing.XGraphics)">
            <summary>
            Draws a text that states that a feature is not supported in a particular build.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawHeader(PdfSharp.Drawing.XGraphics,System.String)">
            <summary>
            Draws the header.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawHeader(System.String)">
            <summary>
            Draws the header.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawPdfHeader">
            <summary>
            Draws the header for a PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawPngHeader">
            <summary>
            Draws the header for a PNG image.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.RenderSnippet(PdfSharp.Drawing.XGraphics)">
            <summary>
            When implemented in a derived class renders the snippet in the specified XGraphic object.
            </summary>
            <param name="gfx">The XGraphics where to render the snippet.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.RenderSnippet">
            <summary>
            When implemented in a derived class renders the snippet in an XGraphic object.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.RenderSnippetAsPdf">
            <summary>
            Renders a snippet as PDF document.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.RenderSnippetAsPng">
            <summary>
            Renders a snippet as PNG image.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.CreatePdfPage(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Creates a PDF page for the specified document.
            </summary>
            <param name="doc">The document.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.BeginBox(PdfSharp.Drawing.XGraphics,System.Int32,PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions,System.String)">
            <summary>
            Translates origin of coordinate space to a box of size 220pp x 140pp.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.BeginBox(PdfSharp.Drawing.XGraphics,System.Int32)">
            <summary>
            Begins rendering the content of a box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
            <param name="boxNumber">The box number.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.BeginBox(PdfSharp.Drawing.XGraphics,System.Int32,PdfSharp.Quality.FeatureAndSnippetBase.BoxOptions)">
            <summary>
            Begins rendering the content of a box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
            <param name="boxNumber">The box number.</param>
            <param name="options">The box options.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.EndBox(PdfSharp.Drawing.XGraphics)">
            <summary>
            Ends rendering of the current box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawTiledBox(PdfSharp.Drawing.XGraphics,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a tiled box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
            <param name="x">The left position of the box.</param>
            <param name="y">The top position of the box.</param>
            <param name="width">The width of the box.</param>
            <param name="height">The height of the box.</param>
            <param name="delta">The size of the grid square.</param>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.RectBox">
            <summary>
            Gets the rectangle of a box.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawCenterPoint(PdfSharp.Drawing.XGraphics)">
            <summary>
            Draws the center point of a box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawAlignmentGrid(PdfSharp.Drawing.XGraphics,System.Boolean,System.Boolean)">
            <summary>
            Draws the alignment grid.
            </summary>
            <param name="gfx">The XGraphics object.</param>
            <param name="highlightHorizontal">if set to <c>true</c> [highlight horizontal].</param>
            <param name="highlightVertical">if set to <c>true</c> [highlight vertical].</param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.DrawArtBox(PdfSharp.Drawing.XGraphics)">
            <summary>
            Draws a dotted line showing the art box.
            </summary>
            <param name="gfx">The XGraphics object.</param>
        </member>
        <member name="P:PdfSharp.Quality.Snippet.Pentagram">
            <summary>
            Gets the points of a pentagram in a unit circle.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.GetPentagram(System.Double,PdfSharp.Drawing.XPoint)">
            <summary>
            Gets the points of a pentagram relative to a center and scaled by a size factor.
            </summary>
            <param name="size">The scaling factor of the pentagram.</param>
            <param name="center">The center of the pentagram.</param>
            <returns></returns>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.HelloWorldFactory(System.String,System.Boolean)">
            <summary>
            Creates a HelloWorld document, optionally with custom message.
            </summary>
            <param name="message"></param>
            <param name="unicode"></param>
        </member>
        <member name="M:PdfSharp.Quality.Snippet.GfxForLastPage(PdfSharp.Pdf.PdfDocument)">
            <summary>
            Gets a XGraphics object for the last page of the specified document.
            </summary>
            <param name="doc">The PDF document.</param>
        </member>
        <member name="T:PdfSharp.Quality.XGraphicsDevExtensions">
            <summary>
            Extensions for the XGraphics class.
            </summary>
        </member>
        <member name="M:PdfSharp.Quality.XGraphicsDevExtensions.DrawMeasureBox(PdfSharp.Drawing.XGraphics,System.String,PdfSharp.Drawing.XFont,PdfSharp.Drawing.XPoint)">
            <summary>
            Draws the measurement box for a specified text and a font.
            </summary>
            <param name="gfx">The XGraphics object</param>
            <param name="text">The text to be measured.</param>
            <param name="font">The font to be used for measuring.</param>
            <param name="pos">The start point of the box.</param>
        </member>
    </members>
</doc>
